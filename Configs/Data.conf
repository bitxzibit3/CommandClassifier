# Ожидаемые ключи в конфигах:
# path_to_df - путь к файлу с таблицей с командами и разметкой, который можно считать в pandas DataFrame
# target_columns - колонки из которых формируется y (именно в таком порядке они будут на выходе из модели)
# input_column - название колонки, которая служет входом для модели
# predict_label_flag - если true, то значения атрибутов (кроме action) приводятся к бинарным значениям и предсказывается только флаг
# test_only_on_fold - тестировать только на фолде с этим номером. Остальные фолды пойдут в трейн. !!! Если не указать - я забыл, что будет.
# add_y_to_x - добавить метку y (шаблон) к тексту, чтоб предсказывать зная шаблон команды. 
# y_descriptions_path - расшифровки y (названия шаблонов). Нужны только если предыдущий флаг add_y_to_x = true

data_short {
    path_to_df = /s/ls4/users/grartem/RL_robots/CommandClassifier/Data/Interim/short_split.csv
    target_columns = [y, action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3]
    input_column = x
    predict_label_flag = false
}
data_v1_multilabel {
    path_to_df = /s/ls4/users/grartem/RL_robots/CommandClassifier/Data/Interim/merged_with_labels_11_patterns_split.csv
    target_columns = [y, action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    input_column = x
    predict_label_flag = false
}
data_v1_multilabel_fold = ${data_v1_multilabel} {
    test_only_on_fold: 0
}

data_v1_multilabel_noY_fold0 = ${data_v1_multilabel} {
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    test_only_on_fold: 0
}
data_v1_multilabel_noYno0_fold0 = ${data_v1_multilabel} {
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    test_only_on_fold: 0
    OneHotArgs = {
        drop = first
    }
}

data_v1_labelflag_noY_fold0 = ${data_v1_multilabel} {
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    predict_label_flag = true
    test_only_on_fold: 0
}

data_v1_y_fold = ${data_v1_multilabel}  {
    target_columns = [y]
    test_only_on_fold: 0
}

data_v1_multilabel_useY_fold = ${data_v1_multilabel}  {
    input_column: [x, y]
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    test_only_on_fold: 0
    add_y_to_x: True
    y_descriptions_path: /s/ls4/users/grartem/RL_robots/CommandClassifier/Data/Interim/y_runames.json
}

#### V2 19.05.2022 ####
data_v2_multilabel {
    path_to_df = /s/ls4/users/grartem/RL_robots/CommandClassifier/Data/Interim/24052022_onecmd_split.csv
    target_columns = [y, action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    input_column = x
    predict_label_flag = false
}
data_v2_multilabel_fold0 = ${data_v2_multilabel} {
    test_only_on_fold: 0
}
data_v2_multilabel_noY_fold0 = ${data_v2_multilabel} {
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    test_only_on_fold: 0
}


#### V3 03.06.2022 ####
data_v3_multilabel {
    path_to_df = /s/ls4/users/grartem/RL_robots/CommandClassifier/Data/Interim/one_cmd_v3_03062022_split.csv
    target_columns = [y, action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    input_column = x
    predict_label_flag = false
}
data_v3_multilabel_fold0 = ${data_v3_multilabel} {
    test_only_on_fold: 0
}
data_v3_multilabel_noY_fold0 = ${data_v3_multilabel} {
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    test_only_on_fold: 0
}
data_v3v2_multilabel {
    path_to_df = /s/ls4/users/grartem/RL_robots/CommandClassifier/Data/Interim/one_cmd_v3_03062022_low_split.csv
    target_columns = [y, action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    input_column = x
    predict_label_flag = false
}
data_v3v2_multilabel_fold0 = ${data_v3v2_multilabel} {
    test_only_on_fold: 0
}
data_v3v2_multilabel_noY_fold0 = ${data_v3v2_multilabel} {
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    test_only_on_fold: 0
}

# v4 05.07.2022
data_v4_multilabel {
    path_to_df = /s/ls4/users/grartem/RL_robots/CommandClassifier/Data/Interim/one_cmd_v4_05072022_low_split.csv
    target_columns = [y, action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    input_column = x
    predict_label_flag = false
}

data_v4_multilabel_noY = ${data_v4_multilabel} {
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
}

data_v4_multilabel_fold0 = ${data_v4_multilabel} {
    test_only_on_fold = 0
}

data_v4_multilabel_noY_fold0 = ${data_v4_multilabel} {
    target_columns = [action, direction, meters, degshours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    test_only_on_fold = 0
}

# v6 20.12.2022
# колонка degshours была разделена на degs и hours, Y убран, добавились новые отношения и self. 
data_v6_multilabel {
    path_to_df = /s/ls4/users/grartem/RL_robots/CommandClassifier/Data/Interim/onecmd_v6_20122022_low.csv
    target_columns = [action, direction, meters, degs, hours, object1, nearest, relation1, object2, relation2, object3, self, gaze]
    input_column = x
    predict_label_flag = false
}

data_v6_multilabel_fold0 = ${data_v6_multilabel} {
    test_only_on_fold = 0
}
